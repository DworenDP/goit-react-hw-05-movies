{"version":3,"file":"static/js/736.698dbc04.chunk.js","mappings":"mMAsCA,UAjCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,iBAAgBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAAKC,QAAzB,GAGnC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACV,KAGF,2BACG,IACyB,KAAb,OAAZG,QAAY,IAAZA,OAAA,EAAAA,EAAcU,QAAd,+CAGC,wBACGV,EAAaW,KAAI,SAAAC,GAChB,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAKV,C,qQClCDC,EAAAA,EAAAA,SAAAA,QAAA,+BACA,IAAMC,EAAO,4CAEAC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAGlBA,EAASC,KAAKd,QAAQK,KAAI,YAC/B,MAAO,CAAEI,GADyC,EAAhBA,GACrBM,MADqC,EAAZA,MAEvC,KALwB,2CAAH,qDAQXC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,uBACLC,EADK,iCAC2BM,EAD3B,gCADG,cACpBJ,EADoB,yBAKnBA,EAASC,KAAKd,QAAQK,KAAI,YAC/B,MAAO,CAAEI,GADyC,EAAhBA,GACrBM,MADqC,EAAZA,MAEvC,KAPyB,2CAAH,sDAUZG,EAAgB,mCAAG,WAAM3B,GAAN,uFACPmB,EAAAA,EAAAA,IAAA,iBACXnB,GADW,OACDoB,EADC,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAe,mCAAG,WAAM5B,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,mBACOoB,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfjB,EAAe,mCAAG,WAAMN,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,mBACOoB,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["pages/Reviews.jsx","servicse/getApi.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../servicse/getApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      getMovieReviews(movieId).then(resp => setMovieReviews(resp.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {' '}\n      {movieReviews?.length === 0 ? (\n        `We currently have no reviews for this movie`\n      ) : (\n        <ul>\n          {movieReviews.map(review => {\n            return (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = `?api_key=ae71ad5454080756cca8e19f063ac455`;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","resp","results","error","console","log","length","map","review","author","content","id","axios","API_KEY","getTrending","response","data","title","searchMovies","query","getMoviesDetails","getMovieCredits"],"sourceRoot":""}